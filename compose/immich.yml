version: "3.8"

services:
  immich-server:
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "./start-server.sh"]
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
      - database
    restart: always

  immich-microservices:
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "./start-microservices.sh"]
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
      - database
    restart: always

  immich-machine-learning:
    image: altran1502/immich-machine-learning:release
    entrypoint: ["/bin/sh", "./entrypoint.sh"]
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      - database
    restart: always

  immich-web:
    image: altran1502/immich-web:release
    entrypoint: ["/bin/sh", "./entrypoint.sh"]
    env_file:
      - .env
    restart: always

  redis:
    container_name: immich_redis
    image: redis:6.2
    restart: always

  database:
    container_name: immich_postgres
    image: postgres:14
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  immich-proxy:
    container_name: immich_proxy
    image: altran1502/immich-proxy:release
    networks:
      - default
      - saltbox
    labels:
      diun.enable: true
      traefik.enable: true
      traefik.docker.network: saltbox
      traefik.http.routers.immich-http.entrypoints: web
      traefik.http.routers.immich-http.middlewares: globalHeaders@file,redirect-to-https,gzip
      traefik.http.routers.immich-http.rule: Host(`immich.TLD.COM`)
      traefik.http.routers.immich-http.service: immich
      traefik.http.routers.immich.entrypoints: websecure
      traefik.http.routers.immich.middlewares: globalHeaders@file,secureHeaders@file
      traefik.http.routers.immich.rule: Host(`immich.TLD.COM`)
      traefik.http.routers.immich.service: immich
      traefik.http.routers.immich.tls.certresolver: cfdns
      traefik.http.routers.immich.tls.options: securetls@file
      traefik.http.services.immich.loadbalancer.server.port: 8080
    logging:
      driver: none
    depends_on:
      - immich-server
    restart: always

volumes:
  pgdata:
networks:
  saltbox:
    external: true
